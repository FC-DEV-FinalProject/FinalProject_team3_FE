import { HttpResponse, http } from 'msw'

const data = [
  {
    strategyId: '1',
    strategyName: 'Dynamic ETF 전략',
    stockTypeIconURLs: [],
    tradeTypeIconURL: '',
    stockTypeNames: [],
    tradeTypeName: 'ETF 매매',
    operationCycle: 'DAY',
    strategyDescription: '전략 설명 예시',
    cumulativeProfitRate: 4924.0,
    maxDrawdownRate: -13068.0,
    averageProfitLossRate: 600.0,
    profitFactor: 148.0,
    winRate: 0.69,
    subscriptionCount: 100,
    traderImgUrl: '',
    nickname: 'AlphaTrader',
    minimumInvestmentAmount: '1억~ 2억',
    initialInvestment: '10,000,000',
    kpRatio: 0.513,
    smScore: 72.1,
    finalProfitLossDate: '2024.03.11',
    createdAt: '2024.01.11',
    subscribed: true,
  },
  {
    strategyId: '2',
    strategyName: '고수익 ETF',
    stockTypeIconURLs: [],
    tradeTypeIconURL: '',
    stockTypeNames: [],
    tradeTypeName: 'ETF 매매',
    operationCycle: 'DAY',
    strategyDescription: '전략 설명 예시',
    cumulativeProfitRate: 4924.0,
    maxDrawdownRate: -13068.0,
    averageProfitLossRate: 600.0,
    profitFactor: 148.0,
    winRate: 0.69,
    subscriptionCount: 100,
    traderImgUrl: '',
    nickname: 'BetaTrader',
    minimumInvestmentAmount: '1억~ 2억',
    initialInvestment: '10,000,000',
    kpRatio: 0.513,
    smScore: 65.4,
    finalProfitLossDate: '2024.03.11',
    createdAt: '2024.01.11',
    subscribed: true,
  },
  {
    strategyId: '3',
    strategyName: 'Futures Pro',
    stockTypeIconURLs: [],
    tradeTypeIconURL: '',
    stockTypeNames: [],
    tradeTypeName: 'ETF 매매',
    operationCycle: 'DAY',
    strategyDescription: '전략 설명 예시',
    cumulativeProfitRate: 4924.0,
    maxDrawdownRate: -13068.0,
    averageProfitLossRate: 600.0,
    profitFactor: 148.0,
    winRate: 0.69,
    subscriptionCount: 100,
    traderImgUrl: '',
    nickname: 'Gamma',
    minimumInvestmentAmount: '1억~ 2억',
    initialInvestment: '10,000,000',
    kpRatio: 0.513,
    smScore: 79.6,
    finalProfitLossDate: '2024.03.11',
    createdAt: '2024.01.11',
    subscribed: true,
  },
  {
    strategyId: '4',
    strategyName: '월별 수익 전략',
    stockTypeIconURLs: [],
    tradeTypeIconURL: '',
    stockTypeNames: [],
    tradeTypeName: 'ETF 매매',
    operationCycle: 'DAY',
    strategyDescription: '전략 설명 예시',
    cumulativeProfitRate: 4924.0,
    maxDrawdownRate: -13068.0,
    averageProfitLossRate: 600.0,
    profitFactor: 148.0,
    winRate: 0.69,
    subscriptionCount: 100,
    traderImgUrl: '',
    nickname: 'user1',
    minimumInvestmentAmount: '1억~ 2억',
    initialInvestment: '10,000,000',
    kpRatio: 0.513,
    smScore: 68.4,
    finalProfitLossDate: '2024.03.11',
    createdAt: '2024.01.11',
    subscribed: true,
  },
  {
    strategyId: '5',
    strategyName: '리스크 관리 전략',
    stockTypeIconURLs: [],
    tradeTypeIconURL: '',
    stockTypeNames: [],
    tradeTypeName: 'ETF 매매',
    operationCycle: 'DAY',
    strategyDescription: '전략 설명 예시',
    cumulativeProfitRate: 4924.0,
    maxDrawdownRate: -13068.0,
    averageProfitLossRate: 600.0,
    profitFactor: 148.0,
    winRate: 0.69,
    subscriptionCount: 100,
    traderImgUrl: '',
    nickname: 'DeltaOne',
    minimumInvestmentAmount: '1억~ 2억',
    initialInvestment: '10,000,000',
    kpRatio: 0.513,
    smScore: 62.3,
    finalProfitLossDate: '2024.03.11',
    createdAt: '2024.01.11',
    subscribed: true,
  },
]

export const strategyDetailsHandlers = [
  http.get('/api/strategies/:strategyId', ({ params }) => {
    const { strategyId } = params
    const strategyData = data.find((item) => item.strategyId === strategyId)
    if (strategyData) {
      return HttpResponse.json({ ...strategyData })
    }
    return HttpResponse.json(
      {
        isSuccess: false,
        message: '전략을 찾을 수 없습니다.',
        code: 4002,
      },
      { status: 400 }
    )
  }),
]
